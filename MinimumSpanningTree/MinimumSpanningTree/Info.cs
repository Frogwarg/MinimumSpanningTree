using System;
using System.Windows.Forms;

namespace MinimumSpanningTree
{
    public partial class Info : Form
    {
        public Info()
        {
            InitializeComponent();
        }

        private void textBox1_KeyPress(object sender, KeyPressEventArgs e)
        {
            e.Handled = true;
        }

        private void Info_Load(object sender, EventArgs e)
        {
            textBox4.Text = "Задача построения минимального остовного дерева графа является одной из " +
                "классических задач теории графов. Для её решения существует множество алгоритмов. " +
                "Наиболее известными являются алгоритм Прима, алгоритм Крускала и алгоритм Борувки. " +
                "Для применения этих алгоритмов исходный граф должен быть неориентированным, взвешенным и связным.";
            textBox1.Text = "   Алгоритм Прима впервые был открыт в 1930 году чешским математиком Войцехом Ярником, " +
                "позже переоткрыт Робертом Примом в 1957 году, и, независимо от них, Э. Дейкстрой в 1959 году." + Environment.NewLine +
                "   Суть алгоритма сводится к перебору рёбер из определенного множества." + Environment.NewLine +
                "   -изначально остов – одна произвольная вершина;" + Environment.NewLine +
                "   -пока минимальный остов не найден, выбирается ребро минимального веса, исходящее из какой - нибудь вершины" +
                " текущего остова в вершину, которую мы ещё не добавили.Добавляем это ребро в остов" +
                " и начинаем заново, пока остов не будет найден." + Environment.NewLine +
                "   Временная сложность этого алгоритма зависит от структуры данных для приоритетной очереди." +
                "Если использовать массив, то сложность будет составлять O(V^2), где V – количество вершин графа.";
            textBox2.Text = "   Алгоритм Крускала (или Краскала) описан Джозефом Краскалом в 1956 году." + Environment.NewLine +
                "   В алгоритме Крускала весь единый список ребер упорядочивается по возрастанию весов ребра. " +
                "Далее ребра перебираются от ребер с меньшим весом к большему, и очередное ребро добавляется " +
                "к остовному дереву, если оно не образовывает цикла с ранее выбранными ребрами. В частности, " +
                "первым всегда выбирается одно из ребер минимального веса в графе." + Environment.NewLine +
                "   Сложность этого алгоритма: O(E*log(E)), где E – число рёбер в графе.";
            textBox3.Text = "   Алгоритм Борувки впервые был опубликован в 1926 году Отакаром Борувкой." + Environment.NewLine +
                "   В данном алгоритме фрагменты минимального остовного дерева наращиваются постепенно " +
                "присоединением минимального ребра, выходящего из каждого фрагмента. Алгоритм состоит из следующих шагов:" + Environment.NewLine +
                "   1.В самом начале каждая вершина является отдельным фрагментом." + Environment.NewLine +
                "   2.На каждом шаге:" + Environment.NewLine +
                "     -для каждого фрагмента определяется минимальное по весу ребро;" + Environment.NewLine +
                "     -минимальные рёбра добавляются в минимальное остовное дерево, а соответствующие фрагменты объединяются." + Environment.NewLine +
                "   На каждой итерации число деревьев в остовном лесу уменьшается по крайней мере в два раза, " +
                "поэтому всего алгоритм совершает не более O(log(V)) итераций. Каждая итерация может быть реализована " +
                "со сложностью O(E), поэтому общее время работы алгоритма составляет O(E*log(V)) " +
                "времени, где V и E – число вершин и рёбер в графе, соответственно.";
        }
    }
}
